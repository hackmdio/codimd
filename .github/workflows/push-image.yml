name: Build and push image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      runtime:
        description: 'Runtime image'
        required: true
        default: 'hackmdio/runtime:16.20.2-35fe7e39'
      buildpack:
        description: 'Buildpack image'
        required: true
        default: 'hackmdio/buildpack:16.20.2-35fe7e39'

env:
  REGISTRY_IMAGE: hackmdio/hackmd

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set Platform Variable
        run: echo "PLATFORM_PAIR=linux-amd64" >> $GITHUB_ENV
      -
        name: Execute Build Steps
        uses: ./.github/actions/build-steps
        with:
          platform: linux/amd64

  build-arm64:
    runs-on: macos-latest
    steps:
      -
        name: Set Platform Variable
        run: echo "PLATFORM_PAIR=linux-arm64" >> $GITHUB_ENV
      -
        name: Execute Build Steps
        uses: ./.github/actions/build-steps
        with:
          platform: linux/arm64

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-amd64
      - build-arm64
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=match,pattern=\d.\d.\d
            type=sha,prefix=
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
